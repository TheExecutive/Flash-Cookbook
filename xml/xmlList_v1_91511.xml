<?xml version="1.0" encoding="utf-8"?>
	<snippets>
		<snippet id="creatingVariables" course="ffm">
				<name>Creating Variables</name>
				<difficulty>Very Easy</difficulty>
				<keywords text="variables,text, field,textfield,ffm" />
				<code>
					<![CDATA[var tf:TextField = new TextField]]>
				</code>
				<notes>
					var - Declares you are creating a new variable, and must be done before variable can be used.
					tf - Is the variable name, it can not begin with a number and can not contain spaces. You can use camelCase or underscores in place of spaces.
					TextField - Is the data type, it represents what kind of object the variable and what types of data can be stored in it - be specific with data types.
				</notes>
				<resources>
					<link href="http://wddbs.com/FFM/slides/Day%201/FFM_Day1_VariablesAndValues.pdf" title="FFM Portal" />
				</resources>
				
		</snippet>
		<snippet id = "creatingFunctions_basic" course="ffm">
				<name>Creating a basic Function</name>
				<difficulty>Very Easy</difficulty>
				<keywords text="function,create,creating,ffm" />
				<code>
					<![CDATA[function functionName():ReturnType
					{
						//action to be performed
					}]]>
				</code>
				<notes>
					function - Declares you are creating a new function
					functionName() - Acts as a unique identifier for the function. 
					() - The parenthatsis hold optional parameters, parameters are arguments you can pass with a function.
					ReturnType - If your function returns a value, this is where you define that type of value will be returned. If no value is returned use "void" for the ReturnType.
				</notes>
				<resources>
					<link href="http://wddbs.com/FFM/slides/Day%201/FFM_Day1_Functions.pdf" title="FFM Portal" />
				</resources>
		</snippet>
		<snippet id = "creatingFunctions_advanced" course="ffm">
				<name>Creating an Advanced Function</name>
				<difficulty>Very Easy</difficulty>
				<keywords text="function,create,advanced,creating,ffm" />
				<code>
					<![CDATA[private function stringLength(pString:String):Number
					{
						return pString.length;
					}]]>
				</code>
				<notes>
					private - Accessor type, defines where a function is private or public.
					function - Declares you are creating a new function
					stringLength() - Acts as a unique identifier for the function. Must not start with a number but can contain numbers, letters, and underscores.
					(pString:String) - The parameter that is being passed into the function. This is looking for a variable named pString that is data typed as a String.
					Number - Is the ReturnType, this function will return a number
					return pString.length - This will return the number of characters that compose the variable pString. So if pString was equal to the word "Cat" the length of pString would be "3".
				</notes>
				<resources>
					<link href="http://wddbs.com/FFM/slides/Day%201/FFM_Day1_Functions.pdf" title="FFM Portal" />
				</resources>
		</snippet>
		<snippet id = "callingFunctions" course="ffm">
				<name>Calling a Function</name>
				<difficulty>Very Easy</difficulty>
				<keywords text="function,call,calling,ffm" />
				<code>
					<![CDATA[MovieClip.play()]]>
				</code>
				<notes>
					MovieClip - The object that will call the function
					play() - The function being called.
					Executing this code would allow a movie clip to call the play() function, which would then play the movie clip. 
				</notes>
				<code>
					<![CDATA[this.myFunction(var1, var2)]]>
				</code>
				<notes>
					this - Refers to the parent container, usually the stage, but can also be used to refer to assets created in the Flash IDE
					myFunction - The name of the function being called, remember this is a unique identifier and can be named anything you would like, but it can not start with a number
					(var1, var2) - The parameters being passed to the function. 
				</notes>
				<resources>
					<link href="http://wddbs.com/FFM/slides/Day%201/FFM_Day1_Functions.pdf" title="FFM Portal" />
				</resources>
		</snippet>
		<snippet id = "convertingDataTypes" course="ffm">
				<name>Converting a Data Type</name>
				<difficulty>Very Easy</difficulty>
				<keywords text="convert,converting,data,type,data type, dataType,ffm" />
				<code>
					<![CDATA[var a:Number;]]>
				</code>
				<code>
					<![CDATA[int(a);]]> OR <![CDATA[a as int;]]>
				</code>
				<notes>
					a:Number - Is a variable data typed as a Number.
					int(a) - Converts a to an int instead of a Number.
					a as int - Also converts a to an int instead of a Number.
				</notes>
				<resources>
					<link href="http://wddbs.com/FFM/slides/Day%201/FFM_DataTypes.key.pdf" title="FFM Portal" />
				</resources>
		</snippet>	
		<snippet id = "changeObjectsXPosition" course="ffm">
				<name>Change an objects X position</name>
				<difficulty>Very Easy</difficulty>
				<keywords text="object,x,x position, position,ffm" />
				<code>
					<![CDATA[obj.x = n;]]>
				</code>
				<notes>
					obj - The object you want to move.
					x - Declares you want to change the objects x property, or the horizontal position of the object.
					n - Represents the number for the new x position based on the objects container.
				</notes>
				<resources>
					<link href="http://wddbs.com/FFM/slides/Day%202/FFM_Display%20Objects.pdf" title="FFM Portal" />
				</resources>
		</snippet>
		<snippet id = "changeObjectsYPosition" course="ffm">
				<name>Change an objects Y position</name>
				<difficulty>Very Easy</difficulty>
				<keywords text="object,y,y position, position,ffm" />
				<code>
					<![CDATA[obj.y = n;]]>
				</code>
				<notes>
					obj - The object you want to move.
					y - Declares you want to change the objects y property, or the vertical position of the object.
					n - Represents the number for the new y position based on the objects container.
				</notes>
				<resources>
					<link href="http://wddbs.com/FFM/slides/Day%202/FFM_Display%20Objects.pdf" title="FFM Portal" />
				</resources>
		</snippet>
		<snippet id = "changeObjectsWidth" course="ffm">
				<name>Change an objects width</name>
				<difficulty>Very Easy</difficulty>
				<keywords text="object,width,ffm" />
				<code>
					<![CDATA[obj.width = n;]]>
				</code>
				<notes>
					obj - The object you want to move.
					width - Declares you want to change the objects width property.
					n - Represents the number for the objects new width.
				</notes>
				<resources>
					<link href="http://wddbs.com/FFM/slides/Day%202/FFM_Display%20Objects.pdf" title="FFM Portal" />
				</resources>
		</snippet>
		<snippet id = "changeObjectsHeight" course="ffm">
				<name>Change an objects height</name>
				<difficulty>Very Easy</difficulty>
				<keywords text="object,height,ffm" />
				<code>
					<![CDATA[obj.height = n;]]>
				</code>
				<notes>
					obj - The object you want to move.
					height - Declares you want to change the objects height property.
					n - Represents the number for the objects new height.
				</notes>
				<resources>
					<link href="http://wddbs.com/FFM/slides/Day%202/FFM_Display%20Objects.pdf" title="FFM Portal" />
				</resources>
		</snippet>
		<snippet id = "changeObjectsScaleX" course="ffm">
				<name>Change an objects scaleX</name>
				<difficulty>Very Easy</difficulty>
				<keywords text="object,scale,scaleX,ffm" />
				<code>
					<![CDATA[obj.scaleX = .n;]]>
				</code>
				<notes>
					obj - The object you want to move.
					scaleX - Declares you want to change the objects scaleX property, or the ratio between the objects current size and its normal size.
					.n - Represents the number for the objects new scaleX, is a number between .1 and 1.
				</notes>
				<resources>
					<link href="http://wddbs.com/FFM/slides/Day%202/FFM_Display%20Objects.pdf" title="FFM Portal" />
				</resources>
		</snippet>
		<snippet id = "changeObjectsScaleY" course="ffm">
				<name>Change an objects scaleY</name>
				<difficulty>Very Easy</difficulty>
				<keywords text="object,scale,scaleY,ffm" />
				<code>
					<![CDATA[obj.scaleY = .n;]]>
				</code>
				<notes>
					obj - The object you want to move.
					scaleX - Declares you want to change the objects scaleY property, or the ratio between the objects current size and its normal size.
					.n - Represents the number for the objects new scaleX, is a number between .1 and 1.
				</notes>
				<resources>
					<link href="http://wddbs.com/FFM/slides/Day%202/FFM_Display%20Objects.pdf" title="FFM Portal" />
				</resources>
		</snippet>
		<snippet id = "setButtonMode" course="ffm">
				<name>Set objects button mode</name>
				<difficulty>Very Easy</difficulty>
				<keywords text="object,button,mode,buttonMode,ffm" />
				<code>
					<![CDATA[obj.buttonMode = true;]]>
				</code>
				<notes>
					obj - The object you want to move.
					buttonMode - Is a boolean value, by default set to false, setting the value true will cause the object to behave like a button.
					true - Sets the value to true, is set to false by default.
				</notes>
				<resources>
					<link href="http://wddbs.com/FFM/slides/Day%202/FFM_Display%20Objects.pdf" title="FFM Portal" />
				</resources>
		</snippet>
		<snippet id = "setSWFproperties" course="ffm">
				<name>Set SWF properties</name>
				<difficulty>Very Easy</difficulty>
				<keywords text="swf,properties,swf properties,ffm" />
				<code>
					<![CDATA[ [SWF(width = "x" height = "x" frameRate = "xx" backgroundColor = "0xFFFFFF")] ]]>
				</code>
				<notes>
					SWF - Declares you are changing the properties of the SWF file.
					width - Sets the width of the SWF display window.
					height - Sets the height of the SWF display window.
					frameRate - Sets the frame rate of the SWF, will typically be 30 for standard projects and 60 for projects containing animations. 60 fps provides a smoother animation than 30 fps.
					backgroundColor - Sets the display windows background color, uses Hex values, must start with 0x (zero x).
				</notes>
				<resources>
					<link href="http://wddbs.com/FFM/slides/Day%202/FFM_Display%20Objects.pdf" title="FFM Portal" />
				</resources>
		</snippet>
		<snippet id = "createSimpleTextField" course="ffm">
				<name>Create a simple TextField</name>
				<difficulty>Very Easy</difficulty>
				<keywords text="textfield,create,ffm" />
				<code>
					<![CDATA[var myTF:TextField = new TextField();
					this.addChild(myTF);
					myTF.text = "Hello World";]]>
				</code>
				<notes>
					var - Delcares a new variable is being created.
					myTF - Unique identifier for the text field you are creating.
					:TextField - Declares the data type for the variable, in this case it is a TextField.
					= new TextField - Declares that this variable is a new text field, by default text fields have a height and width of 100.
					this.addChild(myTF) - Adds the text field to the stage, or display window. Do not forget to add the child to the display list or your text field will not show up.
					myTF.text = "Hello World" - Sets the text of the newly created variable to a string equal to Hello World. Note: you must enclose the text string in quotes.
				</notes>
				<resources>
					<link href="http://wddbs.com/FFM/slides/Day%202/FFM_TextFields.pdf" title="FFM Portal" />
				</resources>
		</snippet>
		<snippet id = "textFieldMultiLine" course="ffm">
				<name>Set TextField to Multi-line</name>
				<difficulty>Very Easy</difficulty>
				<keywords text="textfield,multi,line,multiline,ffm" />
				<code>
					<![CDATA[myTF.multiline = true;]]>
				</code>
				<notes>
					myTF - Unique identifier for the text field you are creating.
					.multiline - Access multi-line property of text field.
					= true; by setting equal to true allows the text field to have multiple lines.
				</notes>
				<resources>
					<link href="http://wddbs.com/FFM/slides/Day%202/FFM_TextFields.pdf" title="FFM Portal" />
				</resources>
		</snippet>
		<snippet id = "textFieldWordWrap" course="ffm">
				<name>Set TextField word wrap</name>
				<difficulty>Very Easy</difficulty>
				<keywords text="textfield,wrap,word wrap,ffm" />
				<code>
					<![CDATA[myTF.wordWrap = true;]]>
				</code>
				<notes>
					myTF - Unique identifier for the text field you are creating.
					.wordWrap - Access word wrap property of text field.
					= true; by setting true allows the text field to wrap text into multiple lines. is set to false by default. Must set multi-line property to true for text to wrap to multiple lines.
				</notes>
				<resources>
					<link href="http://wddbs.com/FFM/slides/Day%202/FFM_TextFields.pdf" title="FFM Portal" />
				</resources>
		</snippet>
		<snippet id = "textFieldEnableTab" course="ffm">
				<name>Set TextField to enable tab</name>
				<difficulty>Very Easy</difficulty>
				<keywords text="textfield,tabEnabled,tab,enable,ffm" />
				<code>
					<![CDATA[myTF.tabEnabled = true;]]>
				</code>
				<notes>
					myTF - Unique identifier for the text field you are creating.
					.tabEnabled - Determines whether the text field can be selected by pressing the tab key.
					= true; sets tabEnabled to true and allows text fields to be selected by pressing the tab key.
				</notes>
				<resources>
					<link href="http://wddbs.com/FFM/slides/Day%202/FFM_TextFields.pdf" title="FFM Portal" />
				</resources>
		</snippet>
		<snippet id = "textFieldEmbedFonts" course="ffm">
				<name>Embed fonts for text fields</name>
				<difficulty>Very Easy</difficulty>
				<keywords text="textfield,embed,font,fonts,embedFonts,ffm" />
				<code>
					<![CDATA[myTF.embedFonts = true;]]>
				</code>
				<notes>
					myTF - Unique identifier for the text field you are creating.
					.embedFonts - Embedding fonts allows Flash to use the desired font you would like text to be displayed in.
					= true; - Directs the TextField to use the font outlines embedded in the movies library, if correct font doesnt exist in library nothing is show. By default this is set to false and the TextField will pick a standard font to display the text in.
				</notes>
				<resources>
					<link href="http://wddbs.com/FFM/slides/Day%202/FFM_TextFields.pdf" title="FFM Portal" />
				</resources>
		</snippet>
		<snippet id = "setTextFormat" course="ffm">
				<name>Set a TextField's TextFormat</name>
				<difficulty>Very Easy</difficulty>
				<keywords text="textfield,format,text,textformat,ffm" />
				<code>
					<![CDATA[var myFormat:TextFormat = new TextFormat();]]>
				</code>
				<notes>
					var - Declares you are creating a new variable.
					myFormat - Unique identifier for variable.
					:TextFormat - Data types the new variable as TextFormat.
				</notes>
				<code>
					<![CDATA[myFormat.font = "Font Name";
					myFormat.size = n;
					myFormat.color = 0xFFFFFF;]]>
				</code>
				<notes>
					myFormat.font = Sets the font you would like to be displayed in the TextField, must be enclosed in quotes and spelled correctly including spaces and/or special characters.
					myFormat.size = Sets the font size for the text in the text field, must be a number;
					myFormat.color = Sets the color of the font in the text field, must be a HEX value and must start with 0x.
				</notes>
				<resources>
					<link href="http://wddbs.com/FFM/slides/Day%202/FFM_TextFields.pdf" title="FFM Portal" />
				</resources>
		</snippet>
		<snippet id = "assignTextFormatToTextField" course="ffm">
				<name>Set a TextField's TextFormat</name>
				<difficulty>Very Easy</difficulty>
				<keywords text="textfield,format,text,textformat,ffm" />
				<code>
					<![CDATA[myTF.setTextFormat = myFormat;]]> OR <![CDATA[myTF.defaultTextFormat = myFormat;]]>
				</code>
				<notes>
					myTF.setTextFormat - Applies the text formatting to the text field AFTER the text has been placed in the text field.
					myTF.defaultTextFormat - Applies the text formatting to the text field BEFORE the text has been placed in the text field.
				</notes>
				<resources>
					<link href="http://wddbs.com/FFM/slides/Day%202/FFM_TextFormat.pdf" title="FFM Portal" />
				</resources>
		</snippet>
	</snippets> <!--end of snippet node-->
		